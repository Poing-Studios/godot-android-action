name: Build Godot Android Plugin
description: Build Godot Android Plugin (standard or mono).
inputs:
  upload_artifact_retention_days:
    description: Retention Days to keep the Artifact
    default: 90
  release_version:
    description: The Release Version of Build (standard/mono).
    default: "standard"
  build_version:
    description: The Build Version of Godot (stable/rc1/beta1) (`alpha` or pre-alpha` could not work).
    default: "stable"
  gradlew_build_path:
    description: The path of `.gdap` file.
    default: "./"
  project_path:
    description: The path of project.
    required: true
  godot-lib_folder_path:
    description: The path of godot-lib.
    required: true
  gdap_file_path:
    description: The path of `.gdap` file.
    required: true

runs:
  using: "composite"
  steps:
    - name: Verify current inputs godot_version
      shell: bash
      run: |
        CURRENT_GODOT_VERSION=3.5
        if [ ${#CURRENT_GODOT_VERSION} -eq 1 ]; then CURRENT_GODOT_VERSION="${CURRENT_GODOT_VERSION}.0"; fi
        echo "CURRENT_GODOT_VERSION=${CURRENT_GODOT_VERSION}" >> $GITHUB_ENV
    
    - name: Create Output file name variable
      shell: bash
      run: |
        OUTPUT_FILENAME=${{ github.event.repository.name }}-${{ inputs.release_version }}-template-v${{env.CURRENT_GODOT_VERSION}}
        echo "OUTPUT_FILENAME=${OUTPUT_FILENAME}" >> $GITHUB_ENV
    
    - name: Download and prepare the Stable Godot .AAR LIB
      shell: bash
      run: | 
        cd ${{ inputs.godot-lib_folder_path }} 
        GODOT_AAR_LIB="godot-lib.aar"
        
        GODOT_AAR_FILENAME="godot-lib.${{env.CURRENT_GODOT_VERSION}}.${{ inputs.build_version}}"
        FULL_PATHNAME_DOWNLOAD_GODOT_AAR="https://downloads.tuxfamily.org/godotengine/${{env.CURRENT_GODOT_VERSION}}"
        
        if [ ${{ inputs.build_version}} != stable ]; then
          FULL_PATHNAME_DOWNLOAD_GODOT_AAR+=${{ inputs.build_version}}
        fi
        
        if [ ${{ inputs.release_version }} = mono ]; then 
          GODOT_AAR_FILENAME+=".mono"
          FULL_PATHNAME_DOWNLOAD_GODOT_AAR+="/mono"
        fi
        
        GODOT_AAR_FILENAME+=".release.aar"
        FULL_PATHNAME_DOWNLOAD_GODOT_AAR+=/${GODOT_AAR_FILENAME}
        
        echo $FULL_PATHNAME_DOWNLOAD_GODOT_AAR
        #get file on Godot's server and rename
        wget $FULL_PATHNAME_DOWNLOAD_GODOT_AAR
        mv $GODOT_AAR_FILENAME $GODOT_AAR_LIB
    
    - name: Grant execute permission for gradlew
      shell: bash
      run: |
        chmod +x gradlew
        
    - name: Build with Gradle
      shell: bash
      run: | 
        ${{ inputs.gradlew_build_path }}gradlew build
    
    - name: Move `.gdap` file to `build/outputs/arr/` folder
      shell: bash
      run: |
        mv ${{ inputs.gdap_file_path }} ${{ inputs.project_path }}/build/outputs/aar/
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.OUTPUT_FILENAME}}
        path: ${{ inputs.project_path }}/build/outputs/aar
        retention-days: ${{ inputs.upload_artifact_retention_days }}
